name: Generate binaries and create a Release on merge

on:
  workflow_dispatch:
  push: 
    branches: ["main", "master"]

jobs:
  export_assetripper_cli:
    runs-on: ubuntu-latest
    permissions: write-all
    name: Export AssetRipper.CLI ${{ matrix.runtime }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            runtime: linux-x64
            ext: ""
          - os: windows-latest
            runtime: win-x64
            ext: ".exe"
    steps:
    - name: checkout
      uses: actions/checkout@v3.3.0

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 10.0.x

    - name: Restore dependencies
      run: dotnet restore Source/AssetRipper.CLI/AssetRipper.CLI.csproj

    - name: Build
      run: dotnet build Source/AssetRipper.CLI/AssetRipper.CLI.csproj --no-restore --configuration Release

    - name: Publish self-contained binary
      run: |
        dotnet publish Source/AssetRipper.CLI/AssetRipper.CLI.csproj \
          --no-restore \
          --configuration Release \
          --runtime ${{ matrix.runtime }} \
          --self-contained true \
          /p:PublishSingleFile=true \
          --output ./publish-${{ matrix.runtime }}
    
    - name: Set tag name to commit SHA
      id: tag
      run: |
        TAG_NAME=${GITHUB_SHA::7}
        echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV
        echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT

    - name: Push tag (only once)
      if: matrix.os == 'ubuntu-latest'
      run: |
        git config user.name "github-actions"
        git config user.email "github-actions@github.com"
        git tag $TAG_NAME
        git push origin $TAG_NAME

    - name: Upload binary to GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ env.TAG_NAME }}
        name: Release ${{ env.TAG_NAME }}
        files: publish-${{ matrix.runtime }}/AssetRipper.CLI${{ matrix.ext }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

#     - name: Publish binaries
#       run: dotnet publish Source/AssetRipper.CLI/AssetRipper.CLI.csproj --no-restore --configuration Release --output ./publish --self-contained --runtime ${{ matrix.runtime }} /p:PublishSingleFile=true 
# #/p:PublishTrimmed=true

  #   - name: Archive binaries
  #     uses: actions/upload-artifact@v4
  #     with:
  #       name: AssetRipper_CLI_${{ matrix.runtime }}
  #       path: ./publish

  # create_release:
  #   needs: export_assetripper_cli
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Create release
  #     uses: ncipollo/release-action@v1.12.0
  #     with:
  #       token: ${{ secrets.GITHUB_TOKEN }}
  #       artifacts: ${{ steps.export.outputs.archive_directory }}/*
  #       tag: "nightly"
  #       generateReleaseNotes: true
  #       makeLatest: true
  #       allowUpdates: true
